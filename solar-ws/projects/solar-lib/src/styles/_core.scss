@use "@angular/material" as mat;
@use "sass:map";

@mixin go($font) {
  html,
  body {
    height: 100%;
    width: 100%;
    background: var(--mat-sys-background);
    color: var(--mat-sys-on-background);
  }

  body {
    display: flex;
    flex-direction: column;
    font-family: $font;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  h1 {
    font: var(--mat-sys-headline-medium);
  }
}

@mixin theme($primary, $tertiary, $font) {
  $primary-palette: _get-palette($primary);
  $tertiary-palette: _get-palette($tertiary);

  $theme-config: (
    color: (
      primary: $primary-palette,
      tertiary: $tertiary-palette,
    ),
    typography: $font,
    density: 0,
  );

  @if (& == null) {
    :root {
      @include _call-theme($theme-config);
    }
  } @else {
      @include _call-theme($theme-config);
  }
}

@mixin _call-theme($config) {
    @include mat.theme($config);
    --lib-primary: var(--mat-sys-primary);
    --lib-on-primary: var(--mat-sys-on-primary);
    --lib-primary-container: var(--mat-sys-primary-container);
    --lib-on-primary-container: var(--mat-sys-on-primary-container);
    --lib-tertiary: var(--mat-sys-tertiary);
    --lib-on-tertiary: var(--mat-sys-on-tertiary);
    --lib-tertiary-container: var(--mat-sys-tertiary-container);
    --lib-on-tertiary-container: var(--mat-sys-on-tertiary-container);
    --lib-background: var(--mat-sys-background);
    --lib-on-background: var(--mat-sys-on-background);
}

@function _get-palette($palette-name) {
  $all-palettes: (
    red: mat.$red-palette,
    green: mat.$green-palette,
    blue: mat.$blue-palette,
    yellow: mat.$yellow-palette,
    cyan: mat.$cyan-palette,
    magenta: mat.$magenta-palette,
    orange: mat.$orange-palette,
    chartreuse: mat.$chartreuse-palette,
    spring-green: mat.$spring-green-palette,
    azure: mat.$azure-palette,
    violet: mat.$violet-palette,
    rose: mat.$rose-palette,
  );

  @if (map.has-key($all-palettes, $palette-name)) {
    @return map.get($all-palettes, $palette-name);
  } @else {
    @return mat.$blue-palette; // Default to blue if not found
  }
}
